{"version":3,"sources":["webpack:///./src/components/PostSample/PostSample.js","webpack:///./src/pages/index.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/components/Container/Container.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/Header/Header.js","webpack:///./src/templates/Layout/Layout.js"],"names":["PostSample","_ref","date","excerpt","path","tags","summary","title","react_default","a","createElement","className","gatsby_browser_entry","aria-label","to","Container","map","tag","key","pageQuery","IndexPage","posts","data","allMarkdownRemark","edges","Layout","post","components_PostSample_PostSample","node","frontmatter","__webpack_require__","r","__webpack_exports__","d","graphql","StaticQueryContext","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3___default","_parse_path__WEBPACK_IMPORTED_MODULE_4__","React","createContext","props","Consumer","staticQueryData","query","render","children","Error","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","Header","siteTitle","Fragment","Helmet_default","defaultTitle","site","siteMetadata","titleTemplate","meta","name","content","lang","components_Header_Header","_755544856"],"mappings":"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","file":"component---src-pages-index-js-7bfce79caae1d5d5998b.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"gatsby\";\n\nimport Container from \"../Container/Container\";\nimport \"./PostSample.css\";\n\nconst PostSample = ({ date, excerpt, path, tags, summary, title }) => (\n  <section className=\"post-sample\">\n    <Link\n      aria-label={title}\n      className={`post-sample__link ${tags && \"post-sample__link--has-tags\"}`}\n      to={path}\n    >\n      <Container>\n        <h1 className=\"post-sample__title\">{title}</h1>\n        <div className=\"post-sample__date\">{date}</div>\n\n        <div className=\"post-sample__summary\">\n          {summary ? summary : excerpt}\n        </div>\n\n        {tags && (\n          <ul className=\"post-sample__tags\">\n            {tags.map(tag => (\n              <li className=\"post-sample__tag\" key={tag}>\n                {tag}\n              </li>\n            ))}\n          </ul>\n        )}\n      </Container>\n    </Link>\n  </section>\n);\n\nexport default PostSample;\n","import React from \"react\";\nimport { graphql } from \"gatsby\";\n\nimport Layout from \"../templates/Layout/Layout\";\nimport PostSample from \"../components/PostSample/PostSample\";\n\nimport \"./index.css\";\n\nconst IndexPage = ({ data }) => {\n  const {\n    allMarkdownRemark: { edges: posts }\n  } = data;\n\n  return (\n    <Layout>\n      <div className=\"index__posts\">\n        {posts.map(post => (\n          <PostSample\n            date={post.node.frontmatter.date}\n            excerpt={post.node.excerpt}\n            key={post.node.frontmatter.path}\n            path={post.node.frontmatter.path}\n            summary={post.node.frontmatter.summary}\n            tags={post.node.frontmatter.tags}\n            title={post.node.frontmatter.title}\n          />\n        ))}\n      </div>\n    </Layout>\n  );\n};\n\nexport const pageQuery = graphql`\n  query {\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      edges {\n        node {\n          excerpt(pruneLength: 300)\n          frontmatter {\n            date(formatString: \"D MMMM YYYY\")\n            path\n            tags\n            summary\n            title\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default IndexPage;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","import React from \"react\";\n\nimport \"./Container.css\";\n\nconst Container = ({ children }) => <div className=\"container\">{children}</div>;\n\nexport default Container;\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from \"react\";\nimport { Link } from \"gatsby\";\n\nimport Container from \"../Container/Container\";\n\nimport \"./Header.css\";\n\nconst Header = ({ siteTitle }) => (\n  <header className=\"header\">\n    <Container>\n      <h1 className=\"header__title\">\n        <Link className=\"header__link\" to=\"/\">\n          {siteTitle}\n        </Link>\n      </h1>\n    </Container>\n  </header>\n);\n\nexport default Header;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Helmet from \"react-helmet\";\nimport { StaticQuery, graphql } from \"gatsby\";\n\nimport Header from \"../../components/Header/Header\";\nimport \"./Layout.css\";\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n        <Helmet\n          defaultTitle={data.site.siteMetadata.title}\n          titleTemplate={`%s | ${data.site.siteMetadata.title}`}\n          meta={[\n            { name: \"description\", content: \"Sample\" },\n            { name: \"keywords\", content: \"sample, something\" }\n          ]}\n        >\n          <html lang=\"en\" />\n        </Helmet>\n        <Header siteTitle={data.site.siteMetadata.title} />\n        {children}\n      </>\n    )}\n  />\n);\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired\n};\n\nexport default Layout;\n"],"sourceRoot":""}